import { Navbar, Footer } from "../components/allComponents";
import { Link } from "react-router-dom";
import "../styles/pages/signup.css";
import { toast } from "react-toastify";
import { useState } from "react";
import axios from "axios";
import { apihost } from "../context/auth-context";

export const Signup = () => {
  // Used to Show/Hide Passwords
  const [formData,setFormData] = useState({firstName:'',lastName:'',email:'',password:''})
  const [passwordType, setPasswordType] = useState({
    password: "password",
    confirmPassword: "password",
  });

  const onChangeHandler = (e)=>{
    setFormData({...formData,[e.target.name]:e.target.value})
  }

  const handleSignupForm = async (e) => {
    e.preventDefault();
    if (formData.password===formData.password) {
      try {
        const { data } = await axios.post(`${apihost}signup.php`, formData);
        // saving the encodedToken in the localStorage
        console.log(data)
        if(data.success)toast.success("Sign up Successful!!");
        else toast.error(data.error)
        //navigate("/products");
      } catch (error) {
        console.log("Signup Error", error);
        toast.error("Server Error, Unable to Signup", error);
      }
    } else {
      toast.error("Passwords Do Not Match!!");
    }
  };

  return (
    <>
      <Navbar />
      {/* Main Container */}
      <form
        className="signup-container flex-column-center mg-top-sm mg-bottom-sm"
        onSubmit={(e)=>{e.preventDefault()}}
      >
        <div className="signup-card">
          {/* Heading */}
          <h2 className="text-center mg-xsm">Signup</h2>
          
          {/* First-Name */}
          <div className="full-name-item flex-column mg-xsm fw-bold">
            <label htmlFor="full-name" className="mg-bottom-xsm">
              First Name
            </label>
            <input
              onChange={onChangeHandler}
              type="text"
              name="firstName"
              className="mg-bottom-xsm"
              value={formData.firstName}
              id="first-name"
              placeholder="First Name"
              required
            />
          </div>
          {/* Last-Name */}
          <div className="full-name-item flex-column mg-xsm fw-bold">
            <label htmlFor="full-name" className="mg-bottom-xsm">
              Last Name
            </label>
            <input
              onChange={onChangeHandler}
              type="text"
              name="lastName"
              className="mg-bottom-xsm"
              id="last-name"
              placeholder="Last Name"
              required
              value={formData.lastName}
            />
          </div>
          {/* Email-id */}
          <div className="email-id-item mg-xsm flex-column fw-bold">
            <label htmlFor="email-id" className="mg-bottom-xsm">
              Email address
            </label>
            <input
              onChange={onChangeHandler}
              type="email"
              pattern="^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$"
              id="email-id"
              name="email"
              className="mg-bottom-xsm"
              placeholder="ram.mishra@gmail.com"
              required
              value={formData.email}
            />
          </div>
          {/* <!-- Password --> */}
          <div className="password-item mg-xsm flex-column fw-bold">
            <label htmlFor="password" className="mg-bottom-xsm">
              Password
            </label>
            <input
              onChange={onChangeHandler}
              type={passwordType.password}
              id="password"
              name="password"
              className="mg-bottom-xsm"
              minLength="8"
              required
              value={formData.password}
            />
            <i
              className="material-icons signup-pwd-show-icon"
              onClick={() =>
                setPasswordType((passwordType) =>
                  passwordType.password === "password"
                    ? { ...passwordType, password: "text" }
                    : { ...passwordType, password: "password" }
                )
              }
            >
              {passwordType.password === "password"
                ? "visibility"
                : "visibility_off"}
            </i>
          </div>
          {/* Buttons */}

          <button
            onClick={handleSignupForm}
            href=""
            className="btn btn-solid btn-create-account fw-bold"
          >
            Create New Account
          </button>
          <Link to="/login" className="btn btn-outline-icon btn-signin fw-bold">
            Already have an account?
            <i className="material-icons">chevron_right</i>
          </Link>
        </div>
      </form>
      <Footer />
    </>
  );
};
