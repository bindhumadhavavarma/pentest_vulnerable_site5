export const cartReducer = (state, { type, payload }) => {
    switch (type) {
        case "ADD-TO-CART":
        case "UPDATE-CART":
            return {
                ...state,
                cartItems: [...state.cartItems, payload],
                totalQuantity: state.totalQuantity + 1,
                totalPrice: state.totalPrice + parseInt(payload.price),
                totalDiscountPrice: state.totalDiscountPrice + parseInt(payload.discount),
            };
        case "REMOVE-FROM-CART":
            return removeFromCart(state, payload);
        default:
            state;
    }
};

export const cartInitialState = {
    cartItems: [],
    totalPrice: 0,
    totalDiscountPrice: 0,
    totalQuantity: 0,
};

const removeFromCart = (state, id) => {
    let cur = null;
    let temp = [];
    state.cartItems.map((item) => {
        item.pid != id ? temp.push(item) : (cur = item);
    });
    let totalPrice = state.totalPrice - cur.totalPrice;
    let totalDiscountPrice = state.totalPrice - cur.totalDiscountPrice;
    let totalQuantity = state.totalQuantity - cur.totalQuantity;
    return {
        ...state,
        cartItems: temp,
        totalPrice: totalPrice,
        totalDiscountPrice: totalDiscountPrice,
        totalQuantity: totalQuantity,
    };
};